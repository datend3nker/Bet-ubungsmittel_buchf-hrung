// <auto-generated />
using System;
using Csharp_Buchführung_WPF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Csharp_Buchführung_WPF.Migrations
{
    [DbContext(typeof(SQLiteDBContext))]
    partial class SQLiteDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6");

            modelBuilder.Entity("Csharp_Buchführung_WPF.Eintrag", b =>
                {
                    b.Property<int>("EintragId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("Abgang")
                        .HasColumnType("REAL");

                    b.Property<float>("AktuellerBestand")
                        .HasColumnType("REAL");

                    b.Property<float>("Anfangsbestand")
                        .HasColumnType("REAL");

                    b.Property<float>("Arbeitsverlust")
                        .HasColumnType("REAL");

                    b.Property<string>("Bemerkung")
                        .HasColumnType("TEXT");

                    b.Property<int>("BtmBestandsbuchNr")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("TEXT");

                    b.Property<char>("Einheit")
                        .HasColumnType("TEXT");

                    b.Property<string>("LfdNr")
                        .HasColumnType("TEXT");

                    b.Property<float>("PrakZugang")
                        .HasColumnType("REAL");

                    b.Property<int?>("StufenId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StufenNummer")
                        .HasColumnType("INTEGER");

                    b.Property<float>("TheroZugang")
                        .HasColumnType("REAL");

                    b.HasKey("EintragId");

                    b.HasIndex("StufenId");

                    b.ToTable("Einträge");
                });

            modelBuilder.Entity("Csharp_Buchführung_WPF.Projekt", b =>
                {
                    b.Property<int>("ProjektId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BtmBestandsbuchNr")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProduktNr")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Produktbezeichnung")
                        .HasColumnType("TEXT");

                    b.Property<int>("Stufenanzahl")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Zeitraum")
                        .HasColumnType("TEXT");

                    b.HasKey("ProjektId");

                    b.ToTable("Projekte");
                });

            modelBuilder.Entity("Csharp_Buchführung_WPF.Stufe", b =>
                {
                    b.Property<int>("StufenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Anzahleinträge")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BtmBestandsbuchNr")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MaterialName")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ProjektId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StufenNummer")
                        .HasColumnType("INTEGER");

                    b.HasKey("StufenId");

                    b.HasIndex("ProjektId");

                    b.ToTable("Stufen");
                });

            modelBuilder.Entity("Csharp_Buchführung_WPF.Eintrag", b =>
                {
                    b.HasOne("Csharp_Buchführung_WPF.Stufe", null)
                        .WithMany("Einträge")
                        .HasForeignKey("StufenId");
                });

            modelBuilder.Entity("Csharp_Buchführung_WPF.Stufe", b =>
                {
                    b.HasOne("Csharp_Buchführung_WPF.Projekt", null)
                        .WithMany("Stufe")
                        .HasForeignKey("ProjektId");
                });
#pragma warning restore 612, 618
        }
    }
}
